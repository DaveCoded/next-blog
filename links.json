[
    {
        "ids": [
            "Avoiding font piracy on a Netlify-deployed static site",
            "my post on font piracy",
            "the great font heist"
        ],
        "slug": "github-font-piracy",
        "completion": "spark",
        "outboundLinks": [],
        "inboundLinks": []
    },
    {
        "ids": [
            "Notes on Database Normalization",
            "how to do database normalization",
            "on database normalization"
        ],
        "slug": "database-normalization-notes",
        "completion": "spark",
        "outboundLinks": [
            {
                "matchedId": "conditionally adding properties to objects",
                "title": "How to conditionally add a property to an object",
                "slug": "conditional-object-properties",
                "completion": "bonfire",
                "excerpt": "If you have an object literal in JavaScript, and you wantto add a property to it only if some condition is met,you're in luck. The neatest way is with the spreadoperator, introduced in ES6.```JavaScript title=conditional-property.jsconst isConditional = true;const myObject = {  t..."
            },
            {
                "matchedId": "Avoiding font piracy on a Netlify-deployed static site",
                "title": "Avoiding font piracy on a Netlify-deployed static site",
                "slug": "github-font-piracy",
                "completion": "spark",
                "excerpt": "Self-hosting web fonts is the best font-loading strategy for many websites. Done correctly, it yields the best performance results and gives you the most options and flexibility. The only reason to avoid it might be that you get too much control, which puts the onus of understand..."
            }
        ],
        "inboundLinks": []
    },
    {
        "ids": [
            "How to conditionally add a property to an object",
            "conditionally adding properties to objects",
            "conditional spread trick"
        ],
        "slug": "conditional-object-properties",
        "completion": "bonfire",
        "outboundLinks": [],
        "inboundLinks": []
    },
    {
        "ids": [
            "Uploading files with React and Typescript",
            "styling file upload inputs",
            "how to upload files in React",
            "this is a cool alias"
        ],
        "slug": "pretty-file-upload-in-react",
        "completion": "flame",
        "outboundLinks": [
            {
                "matchedId": "cool array tricks",
                "title": "Eating your greens - ordering arrays of strings",
                "slug": "sorting-dynamic-arrays-js",
                "completion": "bonfire",
                "excerpt": "Often in code, you handle arrays of items. Sometimes you know their types but not their number. Sometimes you even know the complete list of possible values, but not their number. What if that is the case and you want to sort them in a particular order? Not alphabetically, or by..."
            }
        ],
        "inboundLinks": []
    },
    {
        "ids": [
            "Eating your greens - ordering arrays of strings",
            "how to order an array of strings",
            "cool array tricks"
        ],
        "slug": "sorting-dynamic-arrays-js",
        "completion": "bonfire",
        "outboundLinks": [
            {
                "matchedId": "Uploading files with React and Typescript",
                "title": "Uploading files with React and Typescript",
                "slug": "pretty-file-upload-in-react",
                "completion": "flame",
                "excerpt": "Working on the frontend can often feel a bit hacky. It can be difficult to identify what the \"right\" way to do something is. When I have to stray from the affordances of the native web platform, I get a strange feeling, an instinct instilled in me by listening to those who know f..."
            }
        ],
        "inboundLinks": []
    },
    {
        "ids": ["Mapping a list in React: altering the last element"],
        "slug": "last-element-jsx-array",
        "completion": "bonfire",
        "outboundLinks": [
            {
                "matchedId": "on database normalization",
                "title": "Notes on Database Normalization",
                "slug": "database-normalization-notes",
                "completion": "spark",
                "excerpt": "Normalization is a database design methodology. Proposed by Edgar F. Codd in 1970 - and subsequently developed in the following years with some collaborators - database normalization gives us a framework for structuring relational (usually) databases. Its aim is to reduce data re..."
            },
            {
                "matchedId": "cool array tricks",
                "title": "Eating your greens - ordering arrays of strings",
                "slug": "sorting-dynamic-arrays-js",
                "completion": "bonfire",
                "excerpt": "Often in code, you handle arrays of items. Sometimes you know their types but not their number. Sometimes you even know the complete list of possible values, but not their number. What if that is the case and you want to sort them in a particular order? Not alphabetically, or by..."
            }
        ],
        "inboundLinks": []
    }
]
